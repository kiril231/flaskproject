https://www.wordhound.co.uk/blog/what-should-i-write-about/
<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link type="image/x-icon" href="/favicon.ico" rel="shortcut icon">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <title>Gradus Libri</title>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
          <a class="navbar-brand" href="#">Gradus Libri</a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
              <li class="nav-item">
                <a class="nav-link" aria-current="page" href="{{url_for('home')}}">Головна</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" aria-current="page" href="{{url_for('about')}}">Про нас</a>
              </li>

              <!-- <li class="nav-item">
                <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
              </li> -->

              <li class="nav-item">
               
                {% if current_user.is_authenticated %}
                  
        <a class ="nav-link" href="{{url_for('stat')}}">{{ current_user.name }}</a>
      {% else %}
      <a class ="nav-link" href="{{url_for('login')}}">Увійти</a>
      {% endif %}
          </div>

              </li>
            </ul>
            <!--<form class="d-flex">
              <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
              <button class="btn btn-outline-success" type="submit">Пошук</button>
            </form> -->
          </div>
        </div>
      </nav>

    
    <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
      <div class="carousel-indicators">
        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
      </div>
      <div class="carousel-inner">
        <div class="carousel-item active">
          <img src="https://tse2.mm.bing.net/th/id/OIG2.Lhm58JHMe331UeHWAA.n?w=270&h=270&c=6&r=0&o=5&pid=ImgGn" class="d-block w-100" alt="...">
        </div>
        <div class="carousel-item">
          <img src="https://t4.ftcdn.net/jpg/03/27/76/77/360_F_327767713_76Exj6OasmjBiIE1Os7CBSR0Vfeu9qo7.jpg" class="d-block w-100" alt="...">
        </div>
        <div class="carousel-item">
          <img src="https://t4.ftcdn.net/jpg/03/27/76/77/360_F_327767713_76Exj6OasmjBiIE1Os7CBSR0Vfeu9qo7.jpg" class="d-block w-100" alt="...">
        </div>
      </div>
      <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

    <!-- Option 2: Separate Popper and Bootstrap JS -->
    
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js" integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.3.slim.js" integrity="sha256-DKU1CmJ8kBuEwumaLuh9Tl/6ZB6jzGOBV/5YpNE2BWc=" crossorigin="anonymous"></script>
  </body>
</html>







from flask import Flask, render_template,request, redirect, url_for
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from database_setup import Base,User, Subject
from flask_login import LoginManager, login_required,login_user,logout_user, current_user

app = Flask(__name__)
app.debug = True
app.config['SECRET_KEY'] = "secret key"
engine = create_engine('sqlite:///diary.db',connect_args={'check_same_thread': False})
Base.metadata.bind = engine
DBSession = sessionmaker(bind=engine)
session = DBSession()

login_manager = LoginManager()
login_manager.init_app(app)

@login_manager.user_loader
def load_user(user_id):
    return session.query(User).filter_by(id=user_id).first()
login_manager.login_view = 'login'

@app.route('/login',methods=['POST','GET'])
def login():
    if request.method == "POST":
        username = request.form['username']
        password = request.form['password']
        user = session.query(User).filter_by(username=username).first()
        if user:
            if user.check_password(password):
                login_user(user)
                return render_template('iflogined.html')
            else:
                return "Не вірний пароль"
    else:
        return render_template('login.html')

@app.route('/',methods=['POST','GET'])
def registr():
    if request.method == "POST":
        username = request.form['username']
        password = request.form['password']
        email = request.form['email']
        name = request.form['name']
        user = session.query(User).filter_by(username=username).first()
        if user:
            return "Вже існує у системі"
        else:
            user_new = User(username=username, email=email, name=name)
            user_new.set_password(password)
            session.add_all([user_new])
            session.commit()
            return "нового користувача зареэстровано у системі!"
    else:
        return render_template('register.html')

@app.route('/home',methods=['POST','GET'])
@login_required
def home():
        return render_template('index.html')


#@app.route('/cabinet',methods=['POST','GET'])
#@login_required
#def stat():
#    return render_template('index.html')
@app.route('/cabinet', methods=['POST', 'GET'])
@login_required
def stat():
    username = current_user.username
    if username == "admin2" or username == "admin":
        user = session.query(User).filter_by(username=username).first()
        if user:
            if request.method == "POST":
                username = request.form['username']
                user = session.query(User).filter_by(username=username).first()
                if user:
                        return "Added"
                else:
                    return "Користувача не знайдено"
            return render_template('chiefteacher_cab.html', username=current_user.name)
        else:
            return "Користувача не знайдено"
    else:
        return render_template('user_cab.html', username=current_user.name)

@app.route('/about',methods=['POST','GET'])
@login_required
def about():
    return render_template("aboutus.html")

@app.route('/subjects')
@login_required
def subjects():
    subjects = session.query(Subject).all()
    return render_template('subjects.html',subjects=subjects)

@app.route('/cabinet/classes/', methods = ["GET", "POST"])
@login_required
def newSubject():
    if request.method=="POST":
        newSubject = Subject(title=request.form['name'],
        teacher=request.form['teacher'],
        study_account_materials=request.form['study_account_materials'],
        grade=request.form['grade'],
        )
        session.add(newSubject)
        session.commit()
        return redirect(url_for('subjects.html'))
    else:
        return render_template('subjectAdd.html')





if __name__ == "__main__":
	app.run()